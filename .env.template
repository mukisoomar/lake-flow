# Databricks Lake Flow Environment Configuration Template
# Copy this file to .env and fill in your actual values
# WARNING: Never commit the .env file with real credentials to version control!

# =============================================================================
# DATABRICKS CONNECTION SETTINGS
# =============================================================================

# Databricks workspace hostname (without https://)
# Example: dbc-a1b2c3d4-e5f6.cloud.databricks.com
DATABRICKS_HOST=your-workspace-hostname.cloud.databricks.com

# Personal Access Token for authentication
# Generate from: User Settings > Developer > Access Tokens
# Keep this secure and never share or commit to version control!
DATABRICKS_TOKEN=your-personal-access-token-here

# Compute Cluster ID for Databricks Connect
# Find in: Compute > [Your Cluster] > Configuration > Advanced Options
# Example: 0123-456789-abc123
DATABRICKS_CLUSTER_ID=your-cluster-id-here

# SQL Warehouse ID for SQL queries
# Find in: SQL Warehouses > [Your Warehouse] > Connection Details
# Example: a1b2c3d4e5f6g789
DATABRICKS_WAREHOUSE_ID=your-warehouse-id-here

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================

# Default catalog for tables (optional)
# DATABRICKS_CATALOG=main

# Default schema/database for tables (optional)  
# DATABRICKS_SCHEMA=default

# Timeout settings (optional)
# DATABRICKS_TIMEOUT=120

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. Copy this file to .env:
#    cp .env.template .env

# 2. Get your Databricks workspace URL:
#    - Login to your Databricks workspace
#    - Copy the hostname from the browser URL (without https://)
#    - Example: dbc-a1b2c3d4-e5f6.cloud.databricks.com

# 3. Generate a Personal Access Token:
#    - In Databricks: User Settings > Developer > Access Tokens
#    - Click "Generate New Token"
#    - Give it a name like "Lake Flow Development"
#    - Set expiration (90 days recommended for development)
#    - Copy the token immediately (you won't see it again!)

# 4. Get your Cluster ID:
#    - Go to Compute in your Databricks workspace
#    - Click on your cluster name
#    - Go to Configuration > Advanced Options
#    - Copy the Cluster ID

# 5. Get your SQL Warehouse ID:
#    - Go to SQL Warehouses in your Databricks workspace
#    - Click on your warehouse name
#    - Go to Connection Details tab
#    - Copy the Warehouse ID

# 6. Update the values above and save the .env file

# 7. Test your connection:
#    python simple_connection_test.py

# =============================================================================
# SECURITY NOTES
# =============================================================================

# ⚠️  IMPORTANT SECURITY CONSIDERATIONS:
# 
# 1. NEVER commit the .env file to version control
# 2. Add .env to your .gitignore file
# 3. Use short-lived tokens (30-90 days) for development
# 4. Rotate tokens regularly
# 5. Use service principals for production environments
# 6. Restrict token permissions to minimum required scope
# 7. Monitor token usage in Databricks audit logs

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# Common Issues:
# 
# 1. "Invalid hostname" error:
#    - Remove https:// prefix from DATABRICKS_HOST
#    - Ensure no trailing slashes
#    - Verify workspace URL is correct
#
# 2. "Authentication failed" error:
#    - Check token is valid and not expired
#    - Ensure token has correct permissions
#    - Verify no extra spaces in token
#
# 3. "Cluster not found" error:
#    - Ensure cluster is running
#    - Verify cluster ID is correct
#    - Check you have access to the cluster
#
# 4. "SQL Warehouse not found" error:
#    - Ensure warehouse is running
#    - Verify warehouse ID is correct
#    - Check you have access to the warehouse

# For more help, see the main README.md file
